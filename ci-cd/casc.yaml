jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: ${JENKINS_ADMIN_ID}
         password: ${JENKINS_ADMIN_PASSWORD}
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
  remotingSecurity:
    enabled: true
security:
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: triggeringUsersAuthorizationStrategy
unclassified:
  location:
    url: http://server_ip:8080/

tool:
  maven:
    installations:
      - home: "/opt/maven"
        name: "maven3"
  jdk:
    installations:
      - home: "/opt/java/openjdk"
        name: "jdk11"

credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          scope: GLOBAL
          id: "tomcat_deployer"
          username: "s3836322"
          password: "s3836322"
          description: "Tomcat deployer"
      - usernamePassword:
          scope: GLOBAL
          id: "dockerhub_deployer"
          username: ${DOCKERHUB_ID}
          password: ${DOCKERHUB_PASSWORD}
          description: "Dockerhub deployer"
jobs:
  - script: >
      pipelineJob('default-agent') {
        definition {
          cps {
            script("""\
              pipeline {
                agent any
                tools {
                  maven 'maven3'
                  jdk 'jdk11'
                }
                triggers {
                  pollSCM '* * * * *'
                }
                stages {
                  stage('checkout') {
                    steps {
                      git branch: 'main', url: 'https://github.com/s3836322/cosc2767-assignment2-website.git'
                    }
                  }
                  stage('Execute Maven') {
                    steps {
                      sh 'mvn package'
                    }
                  }
                  stage('Docker Build and Tag') {
                    steps {
                      sh 'docker build -t samplewebapp:latest .'
                      sh 'docker tag samplewebapp s3836322/samplewebapp:latest'
                    }
                  }
                  stage('Publish image to Docker Hub') {
                    steps {
                      withDockerRegistry([ credentialsId: "dockerhub_deployer", url: "" ]) {
                        sh  'docker push s3836322/samplewebapp:latest'
                      }
                    }
                  }
                  stage('Run Docker container on Tomcat hosts') {
                    steps {
                      sh 'ssh -tt -i /home/ubuntu/.ssh/id_rsa ec2-user@ec2-35-170-12-125.compute-1.amazonaws.com -y "docker stop tomcat ; docker rm tomcat ; docker run --name tomcat_tmp -d -p 8080:8080 s3836322/samplewebapp:latest ; docker rename tomcat_tmp tomcat"'
                    }
                  }
                }
              }""".stripIndent())
          }
        }
      }